diff --git a/node_modules/@liskhq/lisk-client/dist-browser/index.js b/node_modules/@liskhq/lisk-client/dist-browser/index.js
index ff6cbb6..728698f 100644
--- a/node_modules/@liskhq/lisk-client/dist-browser/index.js
+++ b/node_modules/@liskhq/lisk-client/dist-browser/index.js
@@ -4724,7 +4724,13 @@ const encryptAES256GCMWithPassword = async (plainText, password, options) => {
     const iterations = kdf === KDF.ARGON2 ? ARGON2_ITERATIONS : (_c = (_b = options === null || options === void 0 ? void 0 : options.kdfparams) === null || _b === void 0 ? void 0 : _b.iterations) !== null && _c !== void 0 ? _c : PBKDF2_ITERATIONS;
     const parallelism = (_e = (_d = options === null || options === void 0 ? void 0 : options.kdfparams) === null || _d === void 0 ? void 0 : _d.parallelism) !== null && _e !== void 0 ? _e : ARGON2_PARALLELISM;
     const memorySize = (_g = (_f = options === null || options === void 0 ? void 0 : options.kdfparams) === null || _f === void 0 ? void 0 : _f.memorySize) !== null && _g !== void 0 ? _g : exports.ARGON2_MEMORY;
-    const key = kdf === KDF.ARGON2
+    const key = options?.getKey ? await options.getKey({
+      password,
+      salt,
+      iterations,
+      parallelism,
+      memorySize,
+    }) : kdf === KDF.ARGON2
         ? await getKeyFromPasswordWithArgon2({
             password,
             salt,
@@ -4766,10 +4772,16 @@ const getTagBuffer = (tag) => {
     }
     return tagBuffer;
 };
-async function decryptAES256GCMWithPassword(encryptedMessage, password, encoding) {
+async function decryptAES256GCMWithPassword(encryptedMessage, password, encoding, options) {
     const { kdf, ciphertext, cipherparams: { iv, tag }, kdfparams: { parallelism, salt, iterations, memorySize }, } = encryptedMessage;
     const tagBuffer = getTagBuffer(tag);
-    const key = kdf === KDF.ARGON2
+    const key = options?.getKey ? await options.getKey({
+      password,
+      salt,
+      iterations,
+      parallelism,
+      memorySize,
+    }) : kdf === KDF.ARGON2
         ? await getKeyFromPasswordWithArgon2({
             password,
             salt: (0, utils_1.hexToBuffer)(salt, 'Salt'),
